{
  "openapi": "3.1.0",
  "info": {
    "title": "Spy Cat Agency",
    "version": "0.1.0"
  },
  "paths": {
    "/api/cats/": {
      "get": {
        "tags": [
          "Cats"
        ],
        "summary": "List Cats",
        "operationId": "list_cats_api_cats__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/CatResponse"
                  },
                  "type": "array",
                  "title": "Response List Cats Api Cats  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Cats"
        ],
        "summary": "Create Cat",
        "operationId": "create_cat_api_cats__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cats/{cat_id}": {
      "get": {
        "tags": [
          "Cats"
        ],
        "summary": "Get Cat",
        "operationId": "get_cat_api_cats__cat_id__get",
        "parameters": [
          {
            "name": "cat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Cat Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Cats"
        ],
        "summary": "Update Cat",
        "operationId": "update_cat_api_cats__cat_id__put",
        "parameters": [
          {
            "name": "cat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Cat Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CatUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CatResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Cats"
        ],
        "summary": "Delete Cat",
        "operationId": "delete_cat_api_cats__cat_id__delete",
        "parameters": [
          {
            "name": "cat_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Cat Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/cats/breeds/valid": {
      "get": {
        "tags": [
          "Cats"
        ],
        "summary": "Get Valid Breeds",
        "operationId": "get_valid_breeds_api_cats_breeds_valid_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Valid Breeds Api Cats Breeds Valid Get"
                }
              }
            }
          }
        }
      }
    },
    "/api/missions/": {
      "get": {
        "tags": [
          "Missions"
        ],
        "summary": "List Missions",
        "operationId": "list_missions_api_missions__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/MissionResponse"
                  },
                  "type": "array",
                  "title": "Response List Missions Api Missions  Get"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Missions"
        ],
        "summary": "Create Mission",
        "operationId": "create_mission_api_missions__post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/missions/{mission_id}": {
      "get": {
        "tags": [
          "Missions"
        ],
        "summary": "Get Mission",
        "operationId": "get_mission_api_missions__mission_id__get",
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Missions"
        ],
        "summary": "Delete Mission",
        "operationId": "delete_mission_api_missions__mission_id__delete",
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successful Response"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/missions/{mission_id}/assign": {
      "put": {
        "tags": [
          "Missions"
        ],
        "summary": "Assign Cat",
        "operationId": "assign_cat_api_missions__mission_id__assign_put",
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MissionAssign"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MissionResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/missions/{mission_id}/targets/{target_id}": {
      "put": {
        "tags": [
          "Missions"
        ],
        "summary": "Update Target",
        "operationId": "update_target_api_missions__mission_id__targets__target_id__put",
        "parameters": [
          {
            "name": "mission_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Mission Id"
            }
          },
          {
            "name": "target_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Target Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TargetUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "summary": "Root",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "summary": "Health Check",
        "operationId": "health_check_ping_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CatCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "years_of_experience": {
            "type": "integer",
            "minimum": 0,
            "title": "Years Of Experience"
          },
          "breed": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Breed"
          },
          "salary": {
            "type": "number",
            "exclusiveMinimum": 0,
            "title": "Salary"
          }
        },
        "type": "object",
        "required": [
          "name",
          "years_of_experience",
          "breed",
          "salary"
        ],
        "title": "CatCreate"
      },
      "CatResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "years_of_experience": {
            "type": "integer",
            "minimum": 0,
            "title": "Years Of Experience"
          },
          "breed": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Breed"
          },
          "salary": {
            "type": "number",
            "exclusiveMinimum": 0,
            "title": "Salary"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "years_of_experience",
          "breed",
          "salary",
          "id",
          "created_at"
        ],
        "title": "CatResponse"
      },
      "CatUpdate": {
        "properties": {
          "salary": {
            "type": "number",
            "exclusiveMinimum": 0,
            "title": "Salary"
          }
        },
        "type": "object",
        "required": [
          "salary"
        ],
        "title": "CatUpdate"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "MissionAssign": {
        "properties": {
          "cat_id": {
            "type": "integer",
            "title": "Cat Id"
          }
        },
        "type": "object",
        "required": [
          "cat_id"
        ],
        "title": "MissionAssign",
        "description": "Schema for assigning a cat to an existing mission"
      },
      "MissionBase": {
        "properties": {
          "cat_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cat Id"
          }
        },
        "type": "object",
        "title": "MissionBase"
      },
      "MissionCreate": {
        "properties": {
          "cat_id": {
            "type": "integer",
            "title": "Cat Id"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/TargetCreate"
            },
            "type": "array",
            "maxItems": 3,
            "minItems": 1,
            "title": "Targets"
          }
        },
        "type": "object",
        "required": [
          "cat_id",
          "targets"
        ],
        "title": "MissionCreate",
        "description": "Schema for creating mission with targets"
      },
      "MissionResponse": {
        "properties": {
          "cat_id": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Cat Id"
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "complete": {
            "type": "boolean",
            "title": "Complete"
          },
          "targets": {
            "items": {
              "$ref": "#/components/schemas/MissionBase"
            },
            "type": "array",
            "title": "Targets",
            "default": []
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "complete",
          "created_at"
        ],
        "title": "MissionResponse"
      },
      "TargetCreate": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "country": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Country"
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "name",
          "country"
        ],
        "title": "TargetCreate"
      },
      "TargetResponse": {
        "properties": {
          "name": {
            "type": "string",
            "maxLength": 255,
            "minLength": 1,
            "title": "Name"
          },
          "country": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "title": "Country"
          },
          "notes": {
            "type": "string",
            "title": "Notes",
            "default": ""
          },
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "complete": {
            "type": "boolean",
            "title": "Complete"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "name",
          "country",
          "id",
          "complete",
          "created_at"
        ],
        "title": "TargetResponse"
      },
      "TargetUpdate": {
        "properties": {
          "notes": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Notes"
          },
          "complete": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Complete"
          }
        },
        "type": "object",
        "title": "TargetUpdate"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}